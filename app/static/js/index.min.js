(()=>{var __webpack_modules__={"./frontend/js/index.js":
/*!******************************!*\
  !*** ./frontend/js/index.js ***!
  \******************************/()=>{eval('const origin = location.origin;\n\nconst loginUrl = new URL("api/auth/sign-in", origin);\nconst registerUrl = new URL("api/auth/register/apply", origin);\nconst newCodeUrl = new URL("api/auth/register/new-code", origin);\nconst verifyCodeUrl = new URL("api/auth/register/verify", origin);\nconst restoreUrl = new URL("api/auth/restore/apply", origin);\nconst restoreNewCodeUrl = new URL("api/auth/restore/new-code", origin);\nconst restoreVerifyUrl = new URL("api/auth/restore/verify", origin);\nconst refreshTokensUrl = new URL("api/auth/refresh-tokens", origin);\n\nconst textHoverColor = "#8935a2";\nconst backgroundColor = "#000000";\nconst windowOpeningDurationMS = 400;\n\nconst cooldown = 30;\nconst cooldownRec = 30;\n\nfunction getDeviceData() {\n    let browser = "unknown browser";\n    let os = "unknown os";\n    let osVersion = "";\n\n    let userAgent = navigator.userAgent;\n\n    if (userAgent.indexOf("Edg") > -1) {\n        browser = "Microsoft Edge";\n    } else if (userAgent.indexOf("Chrome") > -1) {\n        browser = "Chrome";\n    } else if (userAgent.indexOf("Firefox") > -1) {\n        browser = "Firefox";\n    } else if (userAgent.indexOf("Safari") > -1) {\n        browser = "Safari";\n    } else if (userAgent.indexOf("Opera") > -1) {\n        browser = "Opera";\n    } else if (\n        userAgent.indexOf("Trident") > -1 ||\n        userAgent.indexOf("MSIE") > -1\n    ) {\n        browser = "Internet Explorer";\n    }\n\n    const clientStrings = [\n        {s: "Windows 10", r: /(Windows 10.0|Windows NT 10.0)/},\n        {s: "Windows 8.1", r: /(Windows 8.1|Windows NT 6.3)/},\n        {s: "Windows 8", r: /(Windows 8|Windows NT 6.2)/},\n        {s: "Windows 7", r: /(Windows 7|Windows NT 6.1)/},\n        {s: "Windows Vista", r: /Windows NT 6.0/},\n        {s: "Windows Server 2003", r: /Windows NT 5.2/},\n        {s: "Windows XP", r: /(Windows NT 5.1|Windows XP)/},\n        {s: "Windows 2000", r: /(Windows NT 5.0|Windows 2000)/},\n        {s: "Windows ME", r: /(Win 9x 4.90|Windows ME)/},\n        {s: "Windows 98", r: /(Windows 98|Win98)/},\n        {s: "Windows 95", r: /(Windows 95|Win95|Windows_95)/},\n        {s: "Windows NT 4.0", r: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/},\n        {s: "Windows CE", r: /Windows CE/},\n        {s: "Windows 3.11", r: /Win16/},\n        {s: "Android", r: /Android/},\n        {s: "Open BSD", r: /OpenBSD/},\n        {s: "Sun OS", r: /SunOS/},\n        {s: "Chrome OS", r: /CrOS/},\n        {s: "Linux", r: /(Linux|X11(?!.*CrOS))/},\n        {s: "iOS", r: /(iPhone|iPad|iPod)/},\n        {s: "Mac OS X", r: /Mac OS X/},\n        {s: "Mac OS", r: /(Mac OS|MacPPC|MacIntel|Mac_PowerPC|Macintosh)/},\n        {s: "QNX", r: /QNX/},\n        {s: "UNIX", r: /UNIX/},\n        {s: "BeOS", r: /BeOS/},\n        {s: "OS/2", r: /OS\\/2/},\n        {\n            s: "Search Bot",\n            r: /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\\/Teoma|ia_archiver)/,\n        },\n    ];\n    for (let id in clientStrings) {\n        let cs = clientStrings[id];\n        if (cs.r.test(userAgent)) {\n            os = cs.s;\n            break;\n        }\n    }\n\n    if (/Windows/.test(os)) {\n        osVersion = /Windows (.*)/.exec(os)[1];\n        os = "Windows";\n    }\n\n    switch (os) {\n        case "Mac OS":\n        case "Mac OS X":\n        case "Android":\n            osVersion =\n                /(?:Android|Mac OS|Mac OS X|MacPPC|MacIntel|Mac_PowerPC|Macintosh) ([\\.\\_\\d]+)/.exec(\n                    userAgent\n                )[1];\n            break;\n\n        case "iOS":\n            osVersion = /OS (\\d+)_(\\d+)_?(\\d+)?/.exec(nVer);\n            osVersion = osVersion[1] + "." + osVersion[2] + "." + (osVersion[3] | 0);\n            break;\n    }\n\n    return browser + ", " + os + osVersion;\n}\n\nif (isTokensRefreshRequired()) {\n    refreshTokens();\n}\n\nasync function refreshTokens() {\n    let response = await fetch(refreshTokensUrl, {\n        method: "POST",\n        credentials: "same-origin",\n        headers: {\n            "X-SCRF-TOKEN": getCookie("refresh_scrf_token"),\n            "Device": getDeviceData(),\n        },\n    });\n\n    if (response.status === 200) {\n        load_profile();\n    }\n}\n\nfunction isTokensRefreshRequired() {\n    let access = getCookie("access_token");\n\n    if (\n        access != "" &&\n        Math.floor(Date.now() / 1000) <\n            Number(JSON.parse(atob(access.split(".")[1])).exp) - 1\n    ) {\n        load_profile();\n        return false;\n    }\n    return true;\n}\n\nfunction getCookie(cookie) {\n    cookie += "=";\n    let cookies = document.cookie.split("; ");\n    let token = "";\n\n    cookies.forEach((element) => {\n        if (element.substring(0, cookie.length) === cookie) {\n            token = element.substring(cookie.length, element.length);\n        }\n    });\n    return token;\n}\n\nfunction load_profile() {\n    authClasses = document.getElementById("auth-button").classList;\n    profileClasses = document.getElementById("profile-button").classList;\n    if (\n        !authClasses.contains("display-off") &&\n        profileClasses.contains("display-off")\n    ) {\n        authClasses.add("display-off");\n        profileClasses.remove("display-off");\n    }\n\n    let access = getCookie("access_token");\n    let payload = JSON.parse(atob(access.split(".")[1]));\n\n    document.getElementById("name").innerText = payload.name;\n    document.getElementById("avatar").src = new URL(\n        `/static/png/Alien${payload.alien_number}.png`,\n        location.origin\n    );\n}\n\ndocument.getElementById("left-switch").onclick = leftSwitchTransform;\ndocument.getElementById("right-switch").onclick = rightSwitchTransform;\ndocument.getElementById("sign-up").onclick = openSignUpWindow;\ndocument.getElementById("sign-in").onclick = openSignInWindow;\n\ndocument.getElementById("cancel").onclick = closeLoginWindow;\ndocument.getElementById("mail-cancel").onclick = closeConfirmWindow;\ndocument.getElementById("email-cancel").onclick = closeEmailWindow;\ndocument.getElementById("mail-cancel-rec").onclick = closePasswordWindow;\n\ndocument.getElementById("code-btn").onclick = sendNewCode;\ndocument.getElementById("code-btn-rec").onclick = sendNewCodeRec;\n\ndocument\n    .getElementById("login-form-id")\n    .addEventListener("submit", async (e) => {\n        e.preventDefault();\n\n        let formData = new FormData(document.getElementById("login-form-id"));\n\n        let response = await fetch(loginUrl, {\n            method: "POST",\n            credentials: "same-origin",\n            body: formData,\n            headers: {\n                "Device": getDeviceData()\n            }\n        });\n\n        if (response.status == 200) {\n            closeLoginWindow();\n            load_profile();\n        } else {\n            let error = await response.json();\n            document.getElementById("login-info").innerHTML =\n                error["error"]["message"];\n        }\n    });\n\ndocument\n    .getElementById("register-form-id")\n    .addEventListener("submit", async (e) => {\n        e.preventDefault();\n\n        let formData = new FormData(\n            document.getElementById("register-form-id")\n        );\n\n        if (validateRegisterData(formData)) {\n            let response = await fetch(registerUrl, {\n                method: "POST",\n                credentials: "same-origin",\n                body: formData,\n            });\n\n            if (response.status == 201) {\n                if (isTimerGoing) {\n                    disableTimer(timerId);\n                }\n\n                sessionStorage.setItem(\n                    "request_id",\n                    response.headers.get("Request-Id")\n                );\n\n                document.getElementById("get-code-wrapper").classList.add("display-off");\n                document.getElementById("new-code").classList.remove("display-off");\n                document.getElementById("input-code").style.color = "#8935a2";\n                document.getElementById("input-code").value = "";\n                timerId = showTime(cooldown);\n\n                let email = document.getElementById("email-input").value;\n                sessionStorage.setItem("email-reg", email);\n                closeLoginWindow();\n                openConfirmWindow(email);\n            } else {\n                error = await response.json();\n                document.getElementById("register-info").innerHTML = error["error"]["message"];\n            }\n        }\n    });\n\nfunction disableButtons() {\n    document.getElementsByClassName("auth-button")[0].disabled = true;\n    document.getElementsByClassName("auth-button")[1].disabled = true;\n}\n\nfunction enableButtons() {\n    document.getElementsByClassName("auth-button")[0].disabled = false;\n    document.getElementsByClassName("auth-button")[1].disabled = false;\n}\n\nfunction leftSwitchTransform() {\n    document.getElementById("mode-light").style.transform = "translate(0%)";\n    document.getElementById("auth-mode").style.setProperty(\'--right-switch-color\', textHoverColor);\n    document.getElementById("auth-mode").style.setProperty(\'--left-switch-color\', backgroundColor);\n    document.getElementById("register-container").style.left = "-150%";\n    document.getElementById("login-container").style.left = "0%";\n}\n\nfunction rightSwitchTransform() {\n    document.getElementById("mode-light").style.transform = "translate(100%)";\n    document.getElementById("auth-mode").style.setProperty(\'--left-switch-color\', textHoverColor);\n    document.getElementById("auth-mode").style.setProperty(\'--right-switch-color\', backgroundColor);\n    document.getElementById("register-container").style.left = "0%";\n    document.getElementById("login-container").style.left = "150%";\n}\n\nfunction rightSwitch() {\n    document.getElementById("mode-light").classList.add("transition-off");\n    document.getElementById("register-container").classList.add("transition-off");\n    document.getElementById("login-container").classList.add("transition-off");\n\n    rightSwitchTransform();\n    setTimeout(() => {\n        document.getElementById("mode-light").classList.remove("transition-off");\n        document.getElementById("register-container").classList.remove("transition-off");\n        document.getElementById("login-container").classList.remove("transition-off");\n    }, windowOpeningDurationMS);\n}\n\nfunction leftSwitch() {\n    document.getElementById("mode-light").classList.add("transition-off");\n    document.getElementById("register-container").classList.add("transition-off");\n    document.getElementById("login-container").classList.add("transition-off");\n\n    leftSwitchTransform();\n    setTimeout(() => {\n        document.getElementById("mode-light").classList.remove("transition-off");\n        document.getElementById("register-container").classList.remove("transition-off");\n        document.getElementById("login-container").classList.remove("transition-off");\n    }, windowOpeningDurationMS);\n}\n\nfunction openSignInWindow() {\n    leftSwitch();\n    let loginWindow = document.getElementById("login");\n    loginWindow.style.left = "50%";\n    document.getElementById("main").style.filter = "brightness(0.3)";\n    document.getElementById("navbar").style.filter = "brightness(0.3)";\n    disableButtons();\n}\n\nfunction openSignUpWindow() {\n    rightSwitch();\n    let loginWindow = document.getElementById("login");\n    loginWindow.style.left = "50%";\n    document.getElementById("main").style.filter = "brightness(0.3)";\n    document.getElementById("navbar").style.filter = "brightness(0.3)";\n    disableButtons();\n}\n\nfunction closeLoginWindow() {\n    let loginWindow = document.getElementById("login");\n    loginWindow.style.left = "-50%";\n    document.getElementById("main").style.filter = "brightness(1)";\n    document.getElementById("navbar").style.filter = "brightness(1)";\n    document.getElementById("login-info").innerText = "";\n    document.getElementById("register-info").innerText = "";\n    enableButtons();\n}\n\ndocument.onkeydown = function (evt) {\n    let isEscape = false;\n    if ("key" in evt) {\n        isEscape = evt.key === "Escape" || evt.key === "Esc";\n    } else {\n        isEscape = evt.keyCode === 27;\n    }\n    if (isEscape) {\n        closeLoginWindow();\n    }\n};\n\n// temporary button\n// TODO delete this section\n\n// TODO resolve problems with invalid code\n\ndocument.getElementById("temporary-confirm").addEventListener("click", () => {\n    openConfirmWindow("timurkotov1999@gmail.com");\n})\n\nfunction openConfirmWindow(email) {\n    document.getElementById("email").innerText = email;\n    let window = document.getElementById("confirm-window");\n    window.style.left = "50%";\n    document.getElementById("main").style.filter = "brightness(0.5)";\n    document.getElementById("navbar").style.filter = "brightness(0.5)";\n    disableButtons();\n}\n\nfunction closeConfirmWindow() {\n    let window = document.getElementById("confirm-window");\n    window.style.left = "150%";\n    document.getElementById("main").style.filter = "brightness(1)";\n    document.getElementById("navbar").style.filter = "brightness(1)";\n    document.getElementById("input-code").style.color = "#8935a2";\n    document.getElementById("input-code").value = "";\n    enableButtons();\n    if (isTimerGoing) {\n        disableTimer(timerId);\n    }\n}\n\ndocument.addEventListener("input", () => {\n    let field = document.getElementById("input-code");\n    if (field.value.length === 6) {\n        verifyCode();\n    } else {\n        document.getElementById("input-code").style.color = "#8935a2";\n    }\n});\n\nlet timerId;\nlet isTimerGoing = false;\n\nfunction showTime(duration) {\n    isTimerGoing = true;\n    let minutes = Math.floor(duration / 60);\n    let seconds = duration % 60;\n    timerId = setInterval(() => {\n        let time;\n        if (seconds < 10) {\n            time = `${minutes}:0${seconds}`;\n        } else {\n            time = `${minutes}:${seconds}`;\n        }\n        document.getElementById("code-time").innerHTML = time;\n        if (seconds != 0) {\n            seconds -= 1;\n        } else {\n            minutes -= 1;\n            seconds = 59;\n        }\n    }, 1000);\n\n    let thisTimerId = timerId;\n    setTimeout(() => {\n        if (thisTimerId == timerId) {\n            disableTimer(timerId);\n            document.getElementById("new-code").classList.add("display-off");\n            document\n                .getElementById("get-code-wrapper")\n                .classList.remove("display-off");\n        }\n    }, (duration + 1) * 1000);\n\n    return timerId;\n}\n\nfunction disableTimer(timerID) {\n    clearInterval(timerID);\n    isTimerGoing = false;\n}\n\nasync function verifyCode() {\n    let data = new Map();\n    data.set("code", document.getElementById("input-code").value);\n\n    response = await fetch(verifyCodeUrl, {\n        method: "POST",\n        credentials: "same-origin",\n        headers: {\n            "Content-Type": "application/json",\n            "Request-Id": sessionStorage.getItem("request_id"),\n            "Device": getDeviceData()\n        },\n        body: JSON.stringify(Object.fromEntries(data)),\n    });\n\n    if (response.status == 200) {\n        closeConfirmWindow();\n        load_profile();\n    } else {\n        document.getElementById("input-code").style.color = "#BF1A3E";\n    }\n}\n\nasync function sendNewCode() {\n    let data = new Map();\n    data.set("email", sessionStorage.getItem("email-reg"));\n\n    response = await fetch(newCodeUrl, {\n        method: "PATCH",\n        credentials: "same-origin",\n        headers: {\n            "Content-Type": "application/json",\n            "Request-Id": sessionStorage.getItem("request_id"),\n        },\n        body: JSON.stringify(Object.fromEntries(data)),\n    });\n\n    if (response.status == 200) {\n        document.getElementById("get-code-wrapper").classList.add("display-off");\n        document.getElementById("new-code").classList.remove("display-off");\n        document.getElementById("input-code").style.color = "#8935a2";\n        document.getElementById("input-code").value = "";\n        timerId = showTime(cooldown);\n    }\n}\n\nfunction validateRegisterData(formData) {\n    const re =\n        /^(([^<>()[\\]\\.,;:\\s@\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\"]+)*)|(\\".+\\"))@(([^<>()[\\]\\.,;:\\s@\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\"]{2,})$/i;\n\n    let username = formData.get("username");\n    let pass = formData.get("password");\n    let email = formData.get("email");\n\n    if (username.length < 6 || username.length > 20) {\n        document.getElementById("register-info").innerText =\n            "username length must be between 6 and 20";\n        return false;\n    }\n    if (username.includes(" ")) {\n        document.getElementById("register-info").innerText =\n            "username can\'t include any spaces";\n        return false;\n    }\n    if (pass.length < 6 || pass.length > 20) {\n        document.getElementById("register-info").innerText =\n            "password length must be between 6 and 20";\n        return false;\n    }\n    if (pass.includes(" ")) {\n        document.getElementById("register-info").innerText =\n            "password can\'t include any spaces";\n        return false;\n    }\n    if (!re.test(email)) {\n        document.getElementById("register-info").innerText = "invalid email";\n        return false;\n    }\n\n    return true;\n}\n\ndocument.getElementById("recovery-btn").addEventListener("click", () => {\n    closeLoginWindow();\n    openEmailWindow();\n});\n\ndocument.getElementById("email-submit").addEventListener("click", async (e) => {\n    e.preventDefault();\n\n    const email = document.getElementById("email-input-recovery").value;\n    sessionStorage.setItem("email-rec", email);\n\n    let data = new Map();\n    data.set("email", email);\n\n    let response = await fetch(restoreUrl, {\n        method: "POST",\n        credentials: "same-origin",\n        headers: {\n            "Content-Type": "application/json",\n        },\n        body: JSON.stringify(Object.fromEntries(data)),\n    });\n\n    if (response.status === 201) {\n        closeEmailWindow();\n        openPasswordWindow(email);\n        if (isTimerGoingRec) {\n            disableTimerRec(timerIdRec);\n        }\n\n        document.getElementById("get-code-wrapper-rec").classList.add("display-off");\n        document.getElementById("new-code-rec").classList.remove("display-off");\n        timerIdRec = showTimeRec(cooldownRec);\n\n        sessionStorage.setItem(\n            "request_id",\n            response.headers.get("Request-Id")\n        );\n    } else if (response.status === 404 || response.status === 425) {\n        let error = await response.json();\n        document.getElementById("pass-info").innerText = error["error"]["message"];\n    }\n});\n\nfunction openEmailWindow() {\n    let window = document.getElementById("email-window");\n    window.style.left = "50%";\n    document.getElementById("main").style.filter = "brightness(0.5)";\n    document.getElementById("navbar").style.filter = "brightness(0.5)";\n    disableButtons();\n}\n\nfunction closeEmailWindow() {\n    let window = document.getElementById("email-window");\n    window.style.left = "150%";\n    document.getElementById("main").style.filter = "brightness(1)";\n    document.getElementById("navbar").style.filter = "brightness(1)";\n    document.getElementById("email-input-recovery").value = "";\n    document.getElementById("pass-info").innerText = "";\n    enableButtons();\n}\n\nasync function sendNewCodeRec() {\n    let data = new Map();\n    data.set("email", sessionStorage.getItem("email-rec"));\n\n    let response = await fetch(restoreNewCodeUrl, {\n        method: "PATCH",\n        credentials: "same-origin",\n        headers: {\n            "Content-Type": "application/json",\n            "Request-Id": sessionStorage.getItem("request_id"),\n        },\n        body: JSON.stringify(Object.fromEntries(data)),\n    });\n\n    if (response.status === 200) {\n        document\n            .getElementById("get-code-wrapper-rec")\n            .classList.add("display-off");\n        document.getElementById("new-code-rec").classList.remove("display-off");\n        document.getElementById("input-code-rec").value = "";\n\n        if (isTimerGoingRec) {\n            disableTimerRec(timerIdRec);\n        }\n\n        timerIdRec = showTimeRec(cooldownRec);\n        isTimerGoingRec = true;\n    }\n\n    if (response.status === 404 || response.status === 425) {\n        let error = await response.json();\n        document.getElementById("new-pass-info").innerText =\n            error["error"]["message"];\n    }\n}\n\ndocument.getElementById("submit-rec").addEventListener("click", async (e) => {\n    e.preventDefault();\n\n    let password = document.getElementById("email-rec1").value;\n\n    if (password != document.getElementById("email-rec2").value) {\n        document.getElementById("new-pass-info").innerText =\n            "passwords aren\'t match";\n        return;\n    }\n\n    if (password.length < 6 || password.length > 20) {\n        document.getElementById("new-pass-info").innerText =\n            "username length must be between 6 and 20";\n        return;\n    }\n\n    let response = await fetch(restoreVerifyUrl, {\n        method: "Post",\n        credentials: "same-origin",\n        headers: {\n            "Content-Type": "application/json",\n            "Request-Id": sessionStorage.getItem("request_id"),\n            "Device": getDeviceData()\n        },\n        body: JSON.stringify({\n            password: password,\n            code: document.getElementById("input-code-rec").value\n        })\n    });\n\n    if (response.status === 200) {\n        closePasswordWindow();\n        load_profile();\n    }\n    if (response.status === 429 || response.status === 400) {\n        error = await response.json();\n        document.getElementById("new-pass-info").innerText =\n            error["error"]["message"];\n    }\n});\n\nfunction openPasswordWindow(email) {\n    document.getElementById("email-rec").innerText = email;\n    let window = document.getElementById("confirm-window-rec");\n    window.style.opacity = 1;\n    window.style.transform = "translate(0%)";\n    window.style.visibility = "visible";\n\n    document.getElementById("main").style.filter = "brightness(0.5)";\n    document.getElementById("navbar").style.filter = "brightness(0.5)";\n    disableButtons();\n}\n\nfunction closePasswordWindow() {\n    if (isTimerGoingRec) {\n        disableTimerRec(timerIdRec);\n    }\n\n    let window = document.getElementById("confirm-window-rec");\n    window.style.opacity = 0;\n    window.style.transform = "translate(200%)";\n    document.getElementById("main").style.filter = "brightness(1)";\n    document.getElementById("navbar").style.filter = "brightness(1)";\n    document.getElementById("input-code-rec").value = "";\n    document.getElementById("email-rec1").value = "";\n    document.getElementById("email-rec2").value = "";\n    document.getElementById("new-pass-info").innerText = "";\n\n    setTimeout(() => {\n        window.style.visibility = "hidden";\n    }, windowOpeningDurationMS);\n    enableButtons();\n}\n\nlet timerIdRec;\nlet isTimerGoingRec = false;\n\nfunction showTimeRec(duration) {\n    isTimerGoingRec = true;\n    let minutes = Math.floor(duration / 60);\n    let seconds = duration % 60;\n    timerIdRec = setInterval(() => {\n        let time;\n        if (seconds < 10) {\n            time = `${minutes}:0${seconds}`;\n        } else {\n            time = `${minutes}:${seconds}`;\n        }\n        document.getElementById("code-time-rec").innerHTML = time;\n        if (seconds != 0) {\n            seconds -= 1;\n        } else {\n            minutes -= 1;\n            seconds = 59;\n        }\n    }, 1000);\n\n    let thisTimerIdRec = timerIdRec;\n    setTimeout(() => {\n        if (thisTimerIdRec == timerIdRec && isTimerGoingRec) {\n            disableTimerRec(timerIdRec);\n            document\n                .getElementById("new-code-rec")\n                .classList.add("display-off");\n            document\n                .getElementById("get-code-wrapper-rec")\n                .classList.remove("display-off");\n        }\n    }, (duration + 1) * 1000);\n\n    return timerIdRec;\n}\n\nfunction disableTimerRec(timerID) {\n    clearInterval(timerID);\n    isTimerGoingRec = false;\n}\n\n//# sourceURL=webpack://cryptodeal/./frontend/js/index.js?')}},__webpack_exports__={};__webpack_modules__["./frontend/js/index.js"]()})();