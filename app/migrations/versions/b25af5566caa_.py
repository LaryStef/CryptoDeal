"""empty message

Revision ID: b25af5566caa
Revises:
Create Date: 2024-11-18 23:15:35.291106

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision: str = 'b25af5566caa'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'CryptoCurrency',
        sa.Column('ticker', sa.String(length=8), nullable=False),
        sa.Column('name', sa.String(length=32), nullable=False),
        sa.Column('description', sa.String(length=4096), nullable=False),
        sa.Column('volume', sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint('ticker')
    )
    op.create_table(
        'Fiat',
        sa.Column('iso', sa.String(length=3), nullable=False),
        sa.Column('name', sa.String(length=32), nullable=False),
        sa.Column('description', sa.String(length=4096), nullable=False),
        sa.Column('volume', sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint('iso')
    )
    op.create_table(
        'User',
        sa.Column('uuid', sa.String(length=36), nullable=False),
        sa.Column('name', sa.String(length=30), nullable=False),
        sa.Column('password_hash', sa.String(length=64), nullable=False),
        sa.Column('role', sa.String(length=5), nullable=False),
        sa.Column('email', sa.String(length=256), nullable=False),
        sa.Column('register_date', sa.TIMESTAMP(), server_default=sa.text(
            "TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False
        ),
        sa.Column('restore_date', sa.TIMESTAMP(), server_default=sa.text(
            "TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False
        ),
        sa.Column('alien_number', sa.Integer(), nullable=False),
        sa.Column('crypto_spent', sa.Float(), nullable=False),
        sa.Column('crypto_derived', sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint('uuid'),
        sa.UniqueConstraint('email')
    )
    op.create_table(
        'CryptoCourse',
        sa.Column('ID', sa.String(length=36), nullable=False),
        sa.Column('ticker', sa.String(length=8), nullable=False),
        sa.Column('price', sa.Float(), nullable=False),
        sa.Column('type', sa.String(length=8), nullable=False),
        sa.Column('number', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['ticker'],
            ['CryptoCurrency.ticker'],
            ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('ID')
    )
    op.create_table(
        'CryptoTransaction',
        sa.Column('ID', sa.String(length=36), nullable=False),
        sa.Column('ticker', sa.String(length=8), nullable=False),
        sa.Column('amount', sa.Float(), nullable=False),
        sa.Column('type_', sa.String(length=8), nullable=False),
        sa.Column('time', sa.TIMESTAMP(), server_default=sa.text(
            "TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False
        ),
        sa.Column('price', sa.Float(), nullable=False),
        sa.Column('user_id', sa.String(length=36), nullable=False),
        sa.ForeignKeyConstraint(
            ['ticker'],
            ['CryptoCurrency.ticker'],
            ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['User.uuid'],
            ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('ID')
    )
    op.create_table(
        'CryptocurrencyWallet',
        sa.Column('ID', sa.String(length=36), nullable=False),
        sa.Column('ticker', sa.String(length=8), nullable=False),
        sa.Column('amount', sa.Float(), nullable=False),
        sa.Column('income', sa.Float(), nullable=False),
        sa.Column('invested', sa.Float(), nullable=False),
        sa.Column('user_id', sa.String(length=36), nullable=False),
        sa.ForeignKeyConstraint(
            ['ticker'],
            ['CryptoCurrency.ticker'],
            ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['User.uuid'],
            ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('ID')
    )
    op.create_table(
        'FiatWallet',
        sa.Column('ID', sa.String(length=36), nullable=False),
        sa.Column('iso', sa.String(length=3), nullable=False),
        sa.Column('amount', sa.Float(), nullable=False),
        sa.Column('user_id', sa.String(length=36), nullable=False),
        sa.ForeignKeyConstraint(['iso'], ['Fiat.iso'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['User.uuid'],
            ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('ID')
    )
    op.create_table(
        'Session',
        sa.Column('session_id', sa.String(length=36), nullable=False),
        sa.Column('user_id', sa.String(length=36), nullable=False),
        sa.Column('device', sa.String(length=32), nullable=False),
        sa.Column('last_activity', sa.TIMESTAMP(), server_default=sa.text(
            "TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['User.uuid'],
            ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('session_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Session')
    op.drop_table('FiatWallet')
    op.drop_table('CryptocurrencyWallet')
    op.drop_table('CryptoTransaction')
    op.drop_table('CryptoCourse')
    op.drop_table('User')
    op.drop_table('Fiat')
    op.drop_table('CryptoCurrency')
    # ### end Alembic commands ###
